//
//  Prefix header
//
//  The contents of this file are implicitly included at the beginning of every source file.
//

#import <Availability.h>

#ifndef __IPHONE_3_0
#warning "This project uses features only available in iOS SDK 3.0 and later."
#endif

#ifdef __OBJC__

    #import <UIKit/UIKit.h>

    #define kLabelHorizontalInsets      15.0f
    #define kLabelVerticalInsets        11.0f

    #define kLabelHorizontalInsetsSmall      8.0f
    #define kLabelVerticalInsetsSmall        5.0f

    #define IPAD_SCALE 1.15

    #define ASSERT_MAIN_THREAD NSAssert([NSThread isMainThread], @"This method must be called on the main thread")

    extern uint64_t dispatch_benchmark(size_t count, void (^block)(void));

    static inline NSComparisonResult compare(NSInteger int1, NSInteger int2){
        if (int1 < int2) return NSOrderedAscending;
        if (int1 > int2) return NSOrderedDescending;
        return NSOrderedSame;
    };

#warning todo supress unused function warnings

    static BOOL iPad() {
        static bool iPad = NO;
        static dispatch_once_t onceToken;
        dispatch_once(&onceToken, ^{
            iPad = (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad);
        });
        return iPad;
    }

    static NSString *const gittag = @"4.0-BETA8";

    static NSString *const api = @"1";

    typedef NS_ENUM(NSUInteger, BetaMode) {
        BetaModeDevelopment,
        BetaModeBeta,
        BetaModeProduction
    };

    static BetaMode const betaMode = BetaModeBeta;

    static BOOL isBeta() {
        switch (betaMode) {
            case BetaModeDevelopment:
            case BetaModeBeta:
                return YES;
            case BetaModeProduction:
                return NO;
        }
    }

    static NSString * betaModeString() {
        switch (betaMode) {
            case BetaModeDevelopment:
                return @"dev";
            case BetaModeBeta:
                return @"beta";
            case BetaModeProduction:
                return @"production";
        }
    }

#endif

